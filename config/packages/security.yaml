security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: login
                check_path: login
                csrf_token_generator: security.csrf.token_manager
            # https://symfony.com/doc/current/security/form_login_setup.html
            logout:
                path:   logout

                # where to redirect after logout
                target: login

    role_hierarchy:
        ROLE_BLOGGER:     ROLE_USER
        ROLE_ADMIN:       ROLE_BLOGGER
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, allow_if: "!has_role('ROLE_USER')" }
        - { path: ^/register, allow_if: "!has_role('ROLE_USER')" }
        - { path: ^/account, allow_if: "has_role('ROLE_USER')" }
        - { path: ^/comment, allow_if: "has_role('ROLE_USER')" }
        - { path: ^/article/new, allow_if: "has_role('ROLE_BLOGGER')" }
        - { path: ^/article/edit, allow_if: "has_role('ROLE_BLOGGER')" }
